{"ast":null,"code":"import { Component } from 'react';\nimport debounce from 'lodash.debounce';\nimport isEqual from 'lodash.isequal';\nimport PropTypes from 'prop-types';\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\nvar _class = function (_Component) {\n  inherits(_class, _Component);\n  function _class() {\n    var _ref;\n    var _temp, _this, _ret;\n    classCallCheck(this, _class);\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args))), _this), _this.onChange = debounce(function (next) {\n      return _this.props.onChange(next);\n    }, _this.props.debounce), _temp), possibleConstructorReturn(_this, _ret);\n  }\n  createClass(_class, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (!isEqual(nextContext.formik, this.context.formik)) {\n        this.onChange(nextContext.formik);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n  return _class;\n}(Component);\n_class.defaultProps = {\n  debounce: 16,\n  onChange: function onChange() {\n    return null;\n  }\n};\n_class.contextTypes = {\n  formik: PropTypes.object\n};\nexport default _class;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qLAeEA,WAAWC,SAAS;aAAQC,MAAKC,KAAL,CAAWH,QAAX,CAAoBI,IAApB,CAAR;KAAT,EAA4CF,MAAKC,KAAL,CAAWF,QAAvD;;;;8CAEeI,WAAWC,aAAa;UAC5C,CAACC,QAAQD,YAAYE,MAApB,EAA4B,KAAKC,OAAL,CAAaD,MAAzC,CAAL,EAAuD;aAChDR,QAAL,CAAcM,YAAYE,MAA1B;;;;;6BAIK;aACA,IAAP;;;;EAnByBE;OACpBC,eAAe;YACV,EADU;YAEV;WAAM,IAAN;;;OAGLC,eAAe;UACZC,UAAUC","names":["onChange","debounce","_this","props","next","nextProps","nextContext","isEqual","formik","context","Component","defaultProps","contextTypes","PropTypes","object"],"sources":["/Users/nsuresh/sox-validator-ab/src/sox_validator/templates/react/formik-profile-creation/node_modules/formik-observer/dist/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport debounce from 'lodash.debounce';\nimport isEqual from 'lodash.isequal';\nimport PropTypes from 'prop-types';\n\nexport default class extends Component {\n  static defaultProps = {\n    debounce: 16,\n    onChange: () => null\n  };\n\n  static contextTypes = {\n    formik: PropTypes.object\n  };\n\n  onChange = debounce(next => this.props.onChange(next), this.props.debounce);\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (!isEqual(nextContext.formik, this.context.formik)) {\n      this.onChange(nextContext.formik);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}